// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Atoms/Button default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#0179FE",
          "borderColor": "transparent",
          "borderRadius": 6,
          "borderStyle": "solid",
          "borderWidth": 0,
          "elevation": 2,
          "minWidth": 64,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 0.75,
            "width": 0,
          },
          "shadowOpacity": 0.24,
          "shadowRadius": 1.5,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "letterSpacing": 1,
                    "marginHorizontal": 16,
                    "marginVertical": 9,
                    "textAlign": "center",
                  },
                  undefined,
                  false,
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  Object {
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  undefined,
                ],
              ]
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button outlined 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "rgba(0, 0, 0, 0.29)",
          "borderRadius": 6,
          "borderStyle": "solid",
          "borderWidth": 0.5,
          "elevation": 0,
          "minWidth": 64,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "letterSpacing": 1,
                    "marginHorizontal": 16,
                    "marginVertical": 9,
                    "textAlign": "center",
                  },
                  undefined,
                  false,
                  Object {
                    "color": "#0179FE",
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  Object {
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  undefined,
                ],
              ]
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Button text 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "transparent",
          "borderRadius": 6,
          "borderStyle": "solid",
          "borderWidth": 0,
          "elevation": 0,
          "minWidth": 64,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "letterSpacing": 1,
                    "marginHorizontal": 16,
                    "marginVertical": 9,
                    "textAlign": "center",
                  },
                  undefined,
                  false,
                  Object {
                    "color": "#0179FE",
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  Object {
                    "fontFamily": "System",
                    "fontWeight": "500",
                  },
                  undefined,
                ],
              ]
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Checkbox default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "marginRight": 6,
          },
          undefined,
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "color": "rgba(0, 0, 0, 0.54)",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "Material Icons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/CheckboxItem default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          false,
          Array [
            Object {
              "padding": 8,
            },
            Object {
              "width": 750,
            },
          ],
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "margin": 8,
                "width": 40,
              },
              Object {
                "alignSelf": "center",
                "padding": 8,
              },
            ]
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "marginVertical": 6,
                "paddingLeft": 8,
              },
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "fontSize": 16,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                  },
                  undefined,
                ],
              ]
            }
          >
            Title of the CheckboxItem
          </Text>
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "fontSize": 14,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                  },
                  undefined,
                ],
              ]
            }
          >
            Description of the CheckboxItem
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "marginRight": 6,
              },
              Object {
                "alignSelf": "center",
                "padding": 8,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "color": "rgba(0, 0, 0, 0.54)",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/CodeInput default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      autoFocusOnLoad={true}
      code=""
      codeInputFieldStyle={
        Array [
          Object {
            "borderBottomWidth": 3,
            "borderWidth": 0,
            "fontSize": 24,
            "height": 45,
            "width": 30,
          },
          Object {
            "color": "#000",
          },
          undefined,
        ]
      }
      codeInputHighlightStyle={
        Object {
          "borderColor": "#0179FE",
        }
      }
      onCodeChanged={[Function]}
      onCodeFilled={[Function]}
      pinCount={4}
      style={
        Array [
          Object {
            "alignSelf": "center",
            "height": 45,
            "width": "80%",
          },
          Object {
            "width": 600,
          },
        ]
      }
      value=""
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/FormError default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View>
      <View
        style={
          Array [
            undefined,
            Object {
              "width": 300,
            },
          ]
        }
      >
        <View>
          <View
            pointerEvents="none"
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 6,
                },
                Object {
                  "backgroundColor": "#fff",
                  "borderColor": "#F04984",
                  "borderRadius": 6,
                  "borderWidth": 2,
                },
              ]
            }
          />
          <View
            style={
              Object {
                "minHeight": 64,
                "paddingBottom": 0,
                "paddingTop": 8,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateX": 3,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "bottom": 0,
                    "height": 2,
                    "left": 10,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 6,
                    "transform": Array [
                      Object {
                        "translateX": -3,
                      },
                    ],
                    "width": 8,
                  }
                }
              />
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "color": "transparent",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "left": 18,
                    "opacity": 1,
                    "paddingHorizontal": 0,
                    "position": "absolute",
                    "textAlign": "left",
                    "top": 37,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": -30,
                      },
                      Object {
                        "scale": 0.75,
                      },
                      Object {
                        "scaleY": 0.2,
                      },
                    ],
                    "writingDirection": "ltr",
                  }
                }
              >
                Example Field
              </Text>
              <Text
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "#F04984",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "left": 0,
                    "opacity": 1,
                    "paddingHorizontal": 14,
                    "position": "absolute",
                    "textAlign": "left",
                    "top": 36,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": -30,
                      },
                      Object {
                        "scale": 0.75,
                      },
                    ],
                    "writingDirection": "ltr",
                  }
                }
              >
                Example Field
              </Text>
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "left": 0,
                    "opacity": 0,
                    "paddingHorizontal": 14,
                    "position": "absolute",
                    "textAlign": "left",
                    "top": 36,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": -30,
                      },
                      Object {
                        "scale": 0.75,
                      },
                    ],
                    "writingDirection": "ltr",
                  }
                }
              >
                Example Field
              </Text>
            </View>
            <TextInput
              allowFontScaling={true}
              editable={true}
              multiline={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholderTextColor="rgba(0, 0, 0, 0.54)"
              rejectResponderTermination={true}
              selectionColor="#0179FE"
              style={
                Array [
                  Object {
                    "flexGrow": 1,
                    "margin": 0,
                    "paddingHorizontal": 14,
                    "textAlign": "left",
                    "zIndex": 1,
                  },
                  Object {},
                  Object {
                    "paddingBottom": 22,
                    "paddingTop": 22,
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "System",
                    "fontSize": 16,
                    "fontWeight": undefined,
                    "textAlignVertical": "top",
                  },
                ]
              }
              underlineColorAndroid="transparent"
              value="The FormError is shown below this field"
            />
          </View>
        </View>
      </View>
      <Text
        onLayout={[Function]}
        style={
          Object {
            "color": "#F04984",
            "fontFamily": "System",
            "fontSize": 12,
            "fontWeight": "400",
            "opacity": 1,
            "paddingVertical": 4,
            "textAlign": "left",
            "transform": Array [
              Object {
                "translateY": -0,
              },
            ],
            "writingDirection": "ltr",
          }
        }
      >
        errors:form.required
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Item default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          false,
          Array [
            Object {
              "padding": 8,
            },
            Object {
              "width": 750,
            },
          ],
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "marginVertical": 6,
                "paddingLeft": 8,
              },
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "fontSize": 16,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                  },
                  undefined,
                ],
              ]
            }
          >
            Title of the Item
          </Text>
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "fontSize": 14,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                  },
                  undefined,
                ],
              ]
            }
          >
            Description of the Item
          </Text>
        </View>
        <View
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "margin": 8,
                "width": 40,
              },
              Object {
                "alignSelf": "center",
                "padding": 8,
              },
            ]
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/Logo default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "height": 105.96252129471891,
              "marginHorizontal": 64,
              "width": 622,
            },
            undefined,
          ],
        ]
      }
    >
      <FastImageView
        resizeMode="contain"
        source={
          Object {
            "testUri": "../../../src/assets/makeen-logotype.png",
          }
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/SwitchItem default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          false,
          Array [
            Object {
              "padding": 8,
            },
            Object {
              "width": 750,
            },
          ],
        ]
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Array [
              Object {
                "marginVertical": 6,
                "paddingLeft": 8,
              },
              Object {
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "fontSize": 16,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                  },
                  undefined,
                ],
              ]
            }
          >
            Title of the SwitchItem
          </Text>
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "fontSize": 14,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, 0.54)",
                  },
                  undefined,
                ],
              ]
            }
          >
            Description of the SwitchItem
          </Text>
        </View>
        <View
          style={
            Object {
              "alignSelf": "center",
              "padding": 8,
            }
          }
        >
          <RCTSwitch
            accessibilityRole="button"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onTintColor="#0179FE"
            style={
              Object {
                "height": 31,
                "width": 51,
              }
            }
            tintColor=""
            value={false}
          />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;

exports[`Storyshots Atoms/TextInput default 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
        Object {
          "backgroundColor": "#fff",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(240, 240, 240)",
            "borderTopLeftRadius": 6,
            "borderTopRightRadius": 6,
          },
          Object {
            "width": 300,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.26)",
            "bottom": 0,
            "height": 2,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "transform": Array [
              Object {
                "scaleY": 0.5,
              },
            ],
          }
        }
      />
      <View
        style={
          Object {
            "minHeight": 64,
            "paddingBottom": 0,
            "paddingTop": 0,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <Text
            numberOfLines={1}
            onLayout={[Function]}
            style={
              Object {
                "color": "#0179FE",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": undefined,
                "left": 0,
                "opacity": 0,
                "paddingHorizontal": 12,
                "position": "absolute",
                "textAlign": "left",
                "top": 34,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateY": 0,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
                "writingDirection": "ltr",
              }
            }
          >
            Floating Label
          </Text>
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": undefined,
                "left": 0,
                "opacity": 0,
                "paddingHorizontal": 12,
                "position": "absolute",
                "textAlign": "left",
                "top": 34,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateY": 0,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
                "writingDirection": "ltr",
              }
            }
          >
            Floating Label
          </Text>
        </View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          multiline={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onPress={[Function]}
          placeholder=""
          placeholderTextColor="rgba(0, 0, 0, 0.54)"
          rejectResponderTermination={true}
          selectionColor="#0179FE"
          style={
            Array [
              Object {
                "flexGrow": 1,
                "margin": 0,
                "textAlign": "left",
                "zIndex": 1,
              },
              Object {
                "paddingHorizontal": 12,
              },
              Object {
                "height": 64,
              },
              Object {
                "paddingBottom": 4,
                "paddingTop": 24,
              },
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": undefined,
                "textAlignVertical": "center",
              },
            ]
          }
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "row",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontWeight": "400",
              "textAlign": "left",
            },
            undefined,
          ]
        }
      >
        Dark Mode
      </Text>
      <RCTSwitch
        accessibilityRole="button"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#0179FE"
        style={
          Object {
            "height": 31,
            "width": 51,
          }
        }
        tintColor=""
        value={false}
      />
    </View>
  </View>
</View>
`;
